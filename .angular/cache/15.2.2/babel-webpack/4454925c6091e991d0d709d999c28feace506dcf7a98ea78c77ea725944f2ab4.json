{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./counterService.service\";\nexport class userDataService {\n  constructor(counterService) {\n    this.counterService = counterService;\n    this.activeUsers = ['Max', 'Anna'];\n    this.inactiveUsers = ['Chris', 'Manu'];\n  }\n  onSetToInactive(id) {\n    this.inactiveUsers.push(this.activeUsers[id]);\n    this.activeUsers.splice(id, 1);\n    this.counterService.countInactive();\n  }\n  onSetToActive(id) {\n    this.activeUsers.push(this.inactiveUsers[id]);\n    this.inactiveUsers.splice(id, 1);\n    this.counterService.countActive();\n  }\n}\nuserDataService.ɵfac = function userDataService_Factory(t) {\n  return new (t || userDataService)(i0.ɵɵinject(i1.counterService));\n};\nuserDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: userDataService,\n  factory: userDataService.ɵfac\n});","map":{"version":3,"mappings":";;AAKA,OAAM,MAAOA,eAAe;EAKxBC,YAAqBC,cAA+B;IAA/B,mBAAc,GAAdA,cAAc;IAHnC,gBAAW,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC;IAC7B,kBAAa,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC;EAEsB;EAEvDC,eAAe,CAACC,EAAU;IACtB,IAAI,CAACC,aAAa,CAACC,IAAI,CAAC,IAAI,CAACC,WAAW,CAACH,EAAE,CAAC,CAAC;IAC7C,IAAI,CAACG,WAAW,CAACC,MAAM,CAACJ,EAAE,EAAE,CAAC,CAAC;IAC9B,IAAI,CAACF,cAAc,CAACO,aAAa,EAAE;EACrC;EAEAC,aAAa,CAACN,EAAU;IACtB,IAAI,CAACG,WAAW,CAACD,IAAI,CAAC,IAAI,CAACD,aAAa,CAACD,EAAE,CAAC,CAAC;IAC7C,IAAI,CAACC,aAAa,CAACG,MAAM,CAACJ,EAAE,EAAE,CAAC,CAAC;IAChC,IAAI,CAACF,cAAc,CAACS,WAAW,EAAE;EACnC;;AAjBOX,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAY,SAAfZ,eAAe;AAAA","names":["userDataService","constructor","counterService","onSetToInactive","id","inactiveUsers","push","activeUsers","splice","countInactive","onSetToActive","countActive","factory"],"sourceRoot":"","sources":["/Users/paulacum/Documents/VS_Code/Angular/UDEMY/Tareas/Tarea5_Services/src/app/services/userData.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { counterService } from \"./counterService.service\";\n\n@Injectable()\n\nexport class userDataService {\n\n    activeUsers = ['Max', 'Anna'];\n    inactiveUsers = ['Chris', 'Manu'];\n\n    constructor (private counterService : counterService) {}\n\n    onSetToInactive(id: number) {\n        this.inactiveUsers.push(this.activeUsers[id]);\n        this.activeUsers.splice(id, 1);\n        this.counterService.countInactive();\n      }\n    \n      onSetToActive(id: number) {\n        this.activeUsers.push(this.inactiveUsers[id]);\n        this.inactiveUsers.splice(id, 1);\n        this.counterService.countActive();\n      }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}